{"version":3,"sources":["Reducers/MainReducer.js","serviceWorker.js","config.js","Api/Api.js","Api/ApiHandler.js","Actions/Actions.js","Components/File/File.jsx","Components/FileList/FileListEmptyMessage.jsx","Components/Loader/Loader.jsx","Components/FileList/FileList.jsx","Components/ContextMenu/ContextMenuActions/CreateFolderAction.jsx","Components/ContextMenu/ContextMenuActions/UploadFileAction.jsx","Components/Navbar/ThreeDotsMenu.jsx","Components/Breadcrumb/BreadcrumbText.jsx","Components/Navbar/Navbar.jsx","Components/ContextMenu/ContextMenuActions/OpenAction.jsx","Components/ContextMenu/ContextMenuActions/RemoveAction.jsx","Components/ContextMenu/ContextMenuActions/MoveAction.jsx","Components/ContextMenu/ContextMenuActions/CopyAction.jsx","Components/ContextMenu/ContextMenuActions/EditAction.jsx","Components/ContextMenu/ContextMenuActions/RenameAction.jsx","Components/ContextMenu/ContextMenuActions/DownloadAction.jsx","Components/ContextMenu/ContextMenu.jsx","Components/Dialogs/Content/Content.jsx","Components/Dialogs/Edit/Edit.jsx","Components/Dialogs/CreateFolder/CreateFolder.jsx","Components/Dialogs/Rename/Rename.jsx","Components/File/FileSublist/FileSublist.jsx","Components/FileList/FileListSublist/FileListSublist.jsx","Components/Dialogs/Move/Move.jsx","Components/Dialogs/Copy/Copy.jsx","Components/FileUploader/UploadFileList.jsx","Components/FileUploader/FileUploader.jsx","Components/Dialogs/UploadFile/UploadFile.jsx","Components/Dialogs/Dialogs.jsx","Components/Notification/DynamicSnackbar.jsx","App.js","index.js"],"names":["defaultState","path","pathSublist","fileList","fileListSublist","fileListFilter","contextMenuVisible","contextMenuPosition","contextMenuPositionElement","selectedFiles","selectedFolderSublist","loading","loadingSublist","errorMsg","visibleDialogCreateFolder","visibleDialogUploadFile","visibleDialogContent","visibleDialogEdit","visibleDialogMove","visibleDialogCopy","visibleDialogRename","fileContentBlobUrl","fileUploadProgress","fileUploadList","MainReducer","state","action","type","Object","assign","value","sort","a","b","name","toLowerCase","filter","f","i","self","map","ff","indexOf","find","parseInt","URL","revokeObjectURL","createObjectURL","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","host","url_list","url_create_folder","url_get_content","url_download","url_upload","url_remove","url_rename","url_move","url_copy","url_edit","url_compress","url_extract","isEditableFilePattern","isImageFilePattern","isExtractableFilePattern","actions","create_folder","move","copy","copy_folder","compress","extract","edit","remove","upload","upload_by_chunks","preview_images","filenames","recursive","fetch","method","headers","body","JSON","stringify","messageTranslation","handleFetch","resolve","reject","xthen","response","contentType","get","contentDisp","isJson","test","isAttachment","ok","json","Error","blob","success","data","xcatch","errorResponse","errJson","fixPath","replace","getFileList","Promise","encodeURIComponent","API","getFileBody","filename","renameItem","newFileName","oldPath","newPath","destination","createFolder","folder","trim","directory","moveItems","length","copyItems","uploadFiles","formData","FormData","forEach","append","timeout","getActionsByFile","file","acts","push","compressible","editable","extractable","getActionsByMultipleFiles","files","fileActs","splice","getHumanFileSize","bytes","e","Math","pow","toFixed","refreshFileList","dispatch","getState","setLoading","setSelectedFiles","APIHandler","join","r","setFileList","toString","refreshFileListSublist","setLoadingSublist","setSelectedFolderSublist","setFileListSublist","getFileContent","fileName","setFileContent","setVisibleDialogContent","getFileContentForEdit","setVisibleDialogEdit","removeItems","setSelectedFileFromLastTo","lastFile","lastPreviouslySelected","pop","lastPreviouslySelectedIndex","lastSelectedIndex","toAdd","index","element","initSubList","setPathSublist","resetFileUploader","setFileUploadProgress","setVisibleDialogUploadFile","setFileUploadList","enterToPreviousDirectorySublist","slice","setPath","enterToDirectory","setFileListFilter","search","setContextMenuVisible","visible","setVisibleDialogCreateFolder","setVisibleDialogRename","setVisibleDialogMove","setVisibleDialogCopy","percentage","File","this","props","isSelected","size","handleClick","handleDoubleClick","handleContextMenu","avatarStyle","backgroundColor","blue","realSize","className","onClick","onDoubleClick","onContextMenu","data-selected","ListItem","ListItemAvatar","Avatar","style","ListItemText","primary","secondary","Component","connect","ownProps","filePath","event","preventDefault","stopPropagation","x","clientX","touches","pageX","y","clientY","pageY","shiftKey","setContextMenuPosition","ctrlKey","FileListEmptyMessage","withStyles","theme","progress","margin","spacing","unit","classes","Grid","container","justify","CircularProgress","color","FileList","fileListComponent","key","toLocaleLowerCase","callback","handleClose","MenuItem","ListItemIcon","Typography","variant","ThreeDotsMenu","anchorEl","setState","currentTarget","marginLeft","IconButton","aria-label","aria-owns","undefined","aria-haspopup","Menu","open","onClose","React","BreadcrumbText","handleClickPath","rootTitle","handleGoBack","canGoBack","separator","rootPath","data-index","lastPath","directories","dir","Button","display","paths","breakpoints","up","root","width","marginBottom","grow","flexGrow","menuButton","marginRight","title","position","borderRadius","shape","fade","palette","common","white","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","handleChange","enterToPreviousDirectoryByIndex","AppBar","Toolbar","noWrap","InputBase","placeholder","onChange","input","blobUrl","tempLink","document","createElement","href","setAttribute","click","ContextMenu","actionsComp","act","component","EditAction","RenameAction","anchorReference","anchorPosition","top","left","transformOrigin","vertical","horizontal","PaperProps","FormDialog","lastBlobUrl","content","Dialog","aria-labelledby","fullWidth","maxWidth","DialogTitle","id","DialogContent","src","alt","DialogActions","handleOpen","text","t","handleSave","textArea","minHeight","defaultValue","DialogContentText","TextField","autoFocus","label","createFolderName","folderName","form","querySelector","realName","bind","newName","FileSublist","FileListSublist","selectedPath","canMove","disabled","canCopy","UploadFileList","list","dense","List","FileUploader","refs","inputfile","handleReset","handleSelectedFiles","styles","inputreset","htmlFor","ref","multiple","handleUpload","canUpload","LinearProgress","setTimeout","target","Dialogs","DynamicSnackbar","notificationDuration","Snackbar","anchorOrigin","autoHideDuration","ContentProps","message","close","padding","createMuiTheme","typography","useNextVariants","App","init","localStorage","getItem","handleHideContextMenu","Navbar","tagName","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById","process","origin","addEventListener","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6269ac02.chunk.js","sourcesContent":["export const defaultState = {\r\n    path: [],\r\n    pathSublist: [],\r\n    fileList: [],\r\n    fileListSublist: [],\r\n    fileListFilter: null,\r\n    contextMenuVisible: null,\r\n    contextMenuPosition: [],\r\n    contextMenuPositionElement: null,\r\n    selectedFiles: [],\r\n    selectedFolderSublist: null,\r\n    loading: false,\r\n    loadingSublist: false,\r\n    errorMsg: null,\r\n    visibleDialogCreateFolder: false,\r\n    visibleDialogUploadFile: false,\r\n    visibleDialogContent: false,\r\n    visibleDialogEdit: false,\r\n    visibleDialogMove: false,\r\n    visibleDialogCopy: false,\r\n    visibleDialogRename: false,\r\n    fileContentBlobUrl: null,\r\n    fileUploadProgress: 0,\r\n    fileUploadList: []\r\n};\r\n\r\n/**\r\n * Main content reducer\r\n * @param {Object} state\r\n * @param {Object} action\r\n * @returns {Object}\r\n */\r\nconst MainReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_PATH':\r\n            return Object.assign({}, state, {\r\n                path: action.value\r\n            });\r\n        case 'SET_PATH_SUB_LIST':\r\n            return Object.assign({}, state, {\r\n                pathSublist: action.value\r\n            });\r\n        case 'ENTER_TO_DIRECTORY':\r\n            return Object.assign({}, state, {\r\n                path: [...state.path, action.value]\r\n            });\r\n        case 'ENTER_TO_DIRECTORY_SUB_LIST':\r\n            return Object.assign({}, state, {\r\n                pathSublist: [...state.pathSublist, action.value]\r\n            });\r\n        case 'SET_FILE_LIST':\r\n            return Object.assign({}, state, {\r\n                fileList: action.value.sort((a, b) => a.type < b.type ? -1 : a.name.toLowerCase() > b.name.toLowerCase())\r\n            });\r\n        case 'SET_FILE_LIST_SUB_LIST':\r\n            return Object.assign({}, state, {\r\n                fileListSublist: action.value.sort((a, b) => a.type < b.type ? -1 : a.name.toLowerCase() > b.name.toLowerCase())\r\n            });\r\n        case 'SET_FILE_LIST_FILTER':\r\n            return Object.assign({}, state, { \r\n                fileListFilter: action.value\r\n            });\r\n        case 'SET_CONTEXT_MENU_VISIBLE':\r\n            return Object.assign({}, state, { \r\n                contextMenuVisible: action.value\r\n            });\r\n        case 'SET_CONTEXT_MENU_POSITION':\r\n            return Object.assign({}, state, { \r\n                contextMenuPosition: action.value\r\n            });\r\n        case 'SET_CONTEXT_MENU_POSITION_ELEMENT':\r\n            return Object.assign({}, state, { \r\n                contextMenuPositionElement: action.value\r\n            });\r\n        case 'SET_SELECTED_FILES':\r\n            return Object.assign({}, state, {\r\n                selectedFiles: (action.value).filter((f, i, self) => self.map(ff => ff.name).indexOf(f.name) === i)\r\n            });\r\n        case 'SET_SELECTED_FOLDER_SUB_LIST':\r\n            return Object.assign({}, state, {\r\n                selectedFolderSublist: action.value\r\n            });\r\n\r\n        case 'TOGGLE_SELECTED_FILE':\r\n            return Object.assign({}, state, {\r\n                selectedFiles: state.selectedFiles.find(f => f.name === action.value.name) ?\r\n                    state.selectedFiles.filter(f => f.name !== action.value.name) :\r\n                    [...state.selectedFiles, action.value]\r\n            });\r\n        case 'SET_FILE_UPLOAD_PROGRESS':\r\n            return Object.assign({}, state, {\r\n                fileUploadProgress: parseInt(action.value || 0)\r\n            });\r\n        case 'SET_LOADING':\r\n            return Object.assign({}, state, { \r\n                loading: action.value\r\n            });\r\n        case 'SET_LOADING_SUB_LIST':\r\n            return Object.assign({}, state, { \r\n                loadingSublist: action.value\r\n            });\r\n        case 'SET_ERROR_MSG':\r\n            return Object.assign({}, state, { \r\n                errorMsg: action.value\r\n            });\r\n\r\n        case 'SET_VISIBLE_DIALOG_CREATE_FOLDER':\r\n            return Object.assign({}, state, { \r\n                visibleDialogCreateFolder: !!action.value\r\n            });\r\n            \r\n        case 'SET_VISIBLE_DIALOG_UPLOAD_FILE':\r\n            return Object.assign({}, state, { \r\n                visibleDialogUploadFile: !!action.value\r\n            });\r\n\r\n        case 'SET_VISIBLE_DIALOG_CONTENT':\r\n            return Object.assign({}, state, { \r\n                visibleDialogContent: !!action.value\r\n            });\r\n\r\n        case 'SET_VISIBLE_DIALOG_EDIT':\r\n            return Object.assign({}, state, { \r\n                visibleDialogEdit: !!action.value\r\n            });\r\n\r\n        case 'SET_VISIBLE_DIALOG_MOVE':\r\n            return Object.assign({}, state, { \r\n                visibleDialogMove: !!action.value\r\n            });\r\n        case 'SET_VISIBLE_DIALOG_COPY':\r\n            return Object.assign({}, state, { \r\n                visibleDialogCopy: !!action.value\r\n            });\r\n        case 'SET_VISIBLE_DIALOG_RENAME':\r\n            return Object.assign({}, state, { \r\n                visibleDialogRename: !!action.value\r\n            });\r\n        case 'SET_FILE_UPLOAD_LIST':\r\n            return Object.assign({}, state, {\r\n                fileUploadList: action.value\r\n            });\r\n\r\n        case 'SET_FILE_CONTENT':\r\n            /**\r\n             * Removing old blob url\r\n             */\r\n            state.fileContentBlobUrl && URL.revokeObjectURL(state.fileContentBlobUrl);\r\n            return Object.assign({}, state, { \r\n                fileContentBlobUrl: action.value ? URL.createObjectURL(action.value) : null\r\n            });\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default MainReducer;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n"," const host = 'https://helpdesk.medsystems.com.br:3000';\r\n//const host = 'http://localhost:3000';\r\n\r\nexport default {\r\n    url_list: `${host}/filemanager/list`,\r\n    url_create_folder: `${host}/filemanager/dir/create`,\r\n    url_get_content: `${host}/filemanager/file/content`,\r\n    url_download: `${host}/filemanager/file/content`,\r\n    url_upload: `${host}/filemanager/items/upload`,\r\n    url_remove: `${host}/filemanager/items/remove`,\r\n    url_rename: `${host}/filemanager/item/move`,\r\n    url_move: `${host}/filemanager/items/move`,\r\n    url_copy: `${host}/filemanager/items/copy`,\r\n    url_edit: `${host}/filemanager/file/edit`,\r\n    url_compress: `${host}/filemanager/items/compress`,\r\n    url_extract: `${host}/filemanager/file/extract`,\r\n\r\n    isEditableFilePattern: /\\.(txt|diff?|patch|svg|asc|cnf|cfg|conf|html?|cfm|cgi|aspx?|ini|pl|py|md|css|cs|jsx?|jsp|log|htaccess|htpasswd|gitignore|gitattributes|env|json|atom|eml|rss|markdown|sql|xml|xslt?|sh|rb|as|bat|cmd|cob|for|ftn|frm|frx|inc|lisp|scm|coffee|php[3-6]?|java|c|cbl|go|h|scala|vb|tmpl|lock|go|yml|yaml|tsv|lst)$/i,\r\n    isImageFilePattern: /\\.(jpe?g|gif|bmp|png|svg|tiff?)$/i,\r\n    isExtractableFilePattern: /\\.(gz|tar|rar|g?zip)$/i,\r\n\r\n    actions: {\r\n        create_folder: true,\r\n        move: true,\r\n        copy: true,\r\n        copy_folder: true,\r\n        compress: true,\r\n        extract: true,\r\n        edit: true,\r\n        remove: true,\r\n        upload: true,\r\n        upload_by_chunks: true,\r\n        preview_images: true,\r\n    }\r\n};\r\n","import config from './../config.js';\r\n\r\n/**\r\n * Fetch API to list files from directory\r\n * @param {String} path\r\n * @returns {Object}\r\n */\r\nexport function list(path) {\r\n    return fetch(config.url_list + '?path=' + (encodeURIComponent(path) || '/'));\r\n};\r\n\r\n\r\n/**\r\n * Fetch API to create a directory\r\n * @param {String} path\r\n * @param {String} directory\r\n * @returns {Object}\r\n */\r\nexport function createDirectory(path, directory) {\r\n    return fetch(config.url_create_folder, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            path, directory\r\n        })\r\n    });\r\n};\r\n\r\n\r\n/**\r\n * Fetch API to get file body\r\n * @param {String} path\r\n * @returns {Object}\r\n */\r\nexport function getFileContent(path) {\r\n    return fetch(config.url_get_content + '?path=' + (encodeURIComponent(path) || '/'));\r\n};\r\n\r\n\r\n/**\r\n * Fetch API to remove a file or folder\r\n * @param {String} path\r\n * @param {Array} filenames\r\n * @param {Boolean} recursive\r\n * @returns {Object}\r\n */\r\nexport function remove(path, filenames, recursive = true) {\r\n    return fetch(config.url_remove, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            path, filenames, recursive\r\n        })\r\n    });\r\n};\r\n\r\n/**\r\n * Fetch API to move files\r\n * @param {String} path\r\n * @param {Array} filenames\r\n * @param {Boolean} recursive\r\n * @returns {Object}\r\n */\r\nexport function move(path, destination, filenames) {\r\n    return fetch(config.url_move, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            path, destination, filenames\r\n        })\r\n    });\r\n};\r\n\r\n/**\r\n * Fetch API to move files\r\n * @param {String} path\r\n * @param {Array} filenames\r\n * @param {Boolean} recursive\r\n * @returns {Object}\r\n */\r\nexport function rename(path, destination) {\r\n    return fetch(config.url_rename, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            path, destination\r\n        })\r\n    });\r\n};\r\n\r\n/**\r\n * Fetch API to copy files\r\n * @param {String} path\r\n * @param {Array} filenames\r\n * @param {Boolean} recursive\r\n * @returns {Object}\r\n */\r\nexport function copy(path, destination, filenames) {\r\n    return fetch(config.url_copy, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            path, destination, filenames\r\n        })\r\n    });\r\n};\r\n\r\n/**\r\n * Fetch API to copy files\r\n * @param {String} path\r\n * @param {Object<FileList>} fileList\r\n * @returns {Object}\r\n */\r\nexport function upload(path, fileList, formData = new FormData()) {\r\n    [...fileList].forEach(f => {\r\n        formData.append('file[]', f);\r\n    });\r\n    formData.append('path', path);\r\n\r\n    return fetch(config.url_upload, {\r\n        method: 'POST',\r\n        body: formData, \r\n        timeout: 99999999999999,\r\n        headers: {\r\n            // a workaround for node connector, passing the path by header\r\n            path: path\r\n        }\r\n    });\r\n};\r\n","import * as API from './Api.js';\r\nimport config from './../config.js';\r\n\r\nconst messageTranslation = {\r\n    'unknown_response': 'Unknown error response from connector',\r\n    'TypeError: Failed to fetch': 'Cannot get a response from connector.',\r\n};\r\n\r\n/**\r\n * Response handler for fetch responses\r\n * @param {Function} resolve\r\n * @param {Function} reject\r\n * @returns {Object}\r\n */\r\nconst handleFetch = (resolve, reject) => {\r\n    return {\r\n        xthen: (response) => {\r\n            const contentType = response.headers.get('content-type');\r\n            const contentDisp = response.headers.get('content-disposition');\r\n            const isJson = /(application|text)\\/json/.test(contentType);\r\n            const isAttachment = /attachment/.test(contentDisp);\r\n\r\n            if (! response.ok) {\r\n                if (isJson) {\r\n                    throw response.json();\r\n                }\r\n                throw Error(messageTranslation['unknown_response']);\r\n            }\r\n\r\n            if (isAttachment) {\r\n                response.blob().then(blob => {\r\n                    resolve(blob);\r\n                });\r\n                return;\r\n            }\r\n\r\n            if (isJson) {\r\n                response.json().then(json => {\r\n                    if (! json.success) {\r\n                        throw new Error();\r\n                    }\r\n                    resolve(json.data);\r\n                });\r\n                return;\r\n            }\r\n        },\r\n        xcatch: (errorResponse) => {\r\n            // is thrown json\r\n            if (errorResponse && errorResponse.then) {\r\n                errorResponse.then(errJson => {\r\n                    return reject(errJson.errorMsg || JSON.stringify(errJson));\r\n                });\r\n            } else {\r\n                return reject(messageTranslation[errorResponse] || errorResponse);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Clean path string removing double slashes and prepending a slash\r\n * @param {String} path\r\n * @returns {String}\r\n */\r\nconst fixPath = (path) => {\r\n    return ('/' + path).replace(/\\/\\//g, '/');\r\n};\r\n\r\n/**\r\n * Wrap API response for retrive file liest\r\n * @param {String} path\r\n * @returns {Object}\r\n */\r\nexport const getFileList = (path) => {\r\n    path = fixPath(path);\r\n    return new Promise((resolve, reject) => {\r\n        return API.list(path)\r\n            .then(handleFetch(resolve, reject).xthen)\r\n            .catch(handleFetch(resolve, reject).xcatch)\r\n    })\r\n};\r\n\r\n/**\r\n * Wrap API response for retrive file content\r\n * @param {String} path\r\n * @returns {Object}\r\n */\r\nexport const getFileBody = (path, filename) => {\r\n    path = fixPath(path + '/' + filename);\r\n    return new Promise((resolve, reject) => {\r\n        return API.getFileContent(path)\r\n            .then(handleFetch(resolve, reject).xthen)\r\n            .catch(handleFetch(resolve, reject).xcatch)\r\n    })\r\n};\r\n\r\n\r\n/**\r\n * Wrap API response for retrive file content\r\n * @param {String} path\r\n * @returns {Object}\r\n */\r\nexport const renameItem = (path, filename, newFileName) => {\r\n    const oldPath = fixPath(path + '/' + filename);\r\n    const newPath = fixPath(path + '/' + newFileName);\r\n\r\n    return new Promise((resolve, reject) => {\r\n        return API.rename(oldPath, newPath)\r\n            .then(handleFetch(resolve, reject).xthen)\r\n            .catch(handleFetch(resolve, reject).xcatch)\r\n    })\r\n};\r\n\r\n/**\r\n * Wrap API response for create folder\r\n * @param {String} path\r\n * @param {String} folder\r\n * @returns {Object}\r\n */\r\nexport const createFolder = (path, folder) => {\r\n    path = fixPath(path);\r\n    return new Promise((resolve, reject) => {\r\n        if (! (folder || '').trim()) {\r\n            return reject('Invalid folder name');\r\n        }\r\n        return API.createDirectory(path, folder)\r\n            .then(handleFetch(resolve, reject).xthen)\r\n            .catch(handleFetch(resolve, reject).xcatch)\r\n    })\r\n};\r\n\r\n/**\r\n * Wrap API response for remove file or folder\r\n * @param {String} path\r\n * @param {Array} filenames\r\n * @param {Boolean} recursive\r\n * @returns {Object}\r\n */\r\nexport const removeItems = (path, filenames, recursive = true) => {\r\n    path = fixPath(path);\r\n    return new Promise((resolve, reject) => {\r\n        if (! filenames.length) {\r\n            return reject('No files to remove');\r\n        }\r\n        return API.remove(path, filenames, recursive)\r\n            .then(handleFetch(resolve, reject).xthen)\r\n            .catch(handleFetch(resolve, reject).xcatch)\r\n    })\r\n};\r\n\r\n/**\r\n * Wrap API response for move file or folder\r\n * @param {String} path\r\n * @param {Array} filenames\r\n * @param {Boolean} recursive\r\n * @returns {Object}\r\n */\r\nexport const moveItems = (path, destination, filenames) => {\r\n    path = fixPath(path);\r\n    destination = fixPath(destination);\r\n    return new Promise((resolve, reject) => {\r\n        if (! filenames.length) {\r\n            return reject('No files to move');\r\n        }\r\n        return API.move(path, destination, filenames)\r\n            .then(handleFetch(resolve, reject).xthen)\r\n            .catch(handleFetch(resolve, reject).xcatch)\r\n    })\r\n};\r\n\r\n/**\r\n * Wrap API response for copy file or folder\r\n * @param {String} path\r\n * @param {Array} filenames\r\n * @param {Boolean} recursive\r\n * @returns {Object}\r\n */\r\nexport const copyItems = (path, destination, filenames) => {\r\n    path = fixPath(path);\r\n    destination = fixPath(destination);\r\n    return new Promise((resolve, reject) => {\r\n        if (! filenames.length) {\r\n            return reject('No files to copy');\r\n        }\r\n        return API.copy(path, destination, filenames)\r\n            .then(handleFetch(resolve, reject).xthen)\r\n            .catch(handleFetch(resolve, reject).xcatch)\r\n    })\r\n};\r\n\r\n/**\r\n * Wrap API response for upload files\r\n * @param {String} path\r\n * @param {Object<FileList>} fileList\r\n * @returns {Object}\r\n */\r\nexport const uploadFiles = (path, fileList) => {\r\n    path = fixPath(path);\r\n\r\n    return new Promise((resolve, reject) => {\r\n        if (! fileList.length) {\r\n            return reject('No files to upload');\r\n        }\r\n        return API.upload(path, fileList)\r\n            .then(handleFetch(resolve, reject).xthen)\r\n            .catch(handleFetch(resolve, reject).xcatch)\r\n    })\r\n};\r\n\r\n/**\r\n * Calculate available actions for a file\r\n * @param {Object} file\r\n * @returns {Array<String>}\r\n */\r\nexport const getActionsByFile = (file, acts = []) => {\r\n    if (file.type === 'dir') {\r\n        acts.push('open');\r\n\r\n        typeof file.compressible !== 'undefined' ?\r\n            file.compressible && acts.push('compress'):\r\n            acts.push('compress');\r\n    }\r\n\r\n    if (file.type === 'file') {\r\n        acts.push('download');\r\n        config.isImageFilePattern.test(file.name) && acts.push('open');\r\n\r\n        typeof file.editable !== 'undefined' ?\r\n            file.editable && acts.push('edit'):\r\n            config.isEditableFilePattern.test(file.name) && acts.push('edit');\r\n        \r\n        typeof file.extractable !== 'undefined' ?\r\n            file.extractable && acts.push('extract'):\r\n            config.isExtractableFilePattern.test(file.name) && acts.push('extract');\r\n\r\n        acts.push('copy');\r\n    }\r\n\r\n    acts.push('move');\r\n    acts.push('rename');\r\n    acts.push('perms');\r\n    acts.push('remove');\r\n\r\n    return acts;\r\n}\r\n\r\n/**\r\n * Calculate available actions for selected files, excluding non coincidences\r\n * @param {Array<Object>} files\r\n * @returns {Array<String>}\r\n */\r\nexport const getActionsByMultipleFiles = (files, acts = []) => {\r\n    files.forEach(file => {\r\n        const fileActs = getActionsByFile(file);\r\n        // intersects previous actions with the following to leave only coincidences\r\n        acts = acts.length ? acts.filter(value => -1 !== fileActs.indexOf(value)) : fileActs;\r\n    });\r\n\r\n    if (files.length > 1) {\r\n        acts.splice(acts.indexOf('open'), acts.indexOf('open') >= 0);\r\n        acts.splice(acts.indexOf('edit'), acts.indexOf('edit') >= 0);\r\n        acts.splice(acts.indexOf('compress'), acts.indexOf('compress') >= 0);\r\n        acts.splice(acts.indexOf('download'), acts.indexOf('download') >= 0);\r\n        acts.splice(acts.indexOf('rename'), acts.indexOf('rename') >= 0);\r\n        acts.push('compress');\r\n    }\r\n    return acts;\r\n}\r\n\r\n/**\r\n * Calculate file size by bytes in human readable format\r\n * @param {Number} bytes\r\n * @returns {String}\r\n */\r\nexport const getHumanFileSize = (bytes) => {\r\n    const e = (Math.log(bytes) / Math.log(1e3)) | 0;\r\n    return +(bytes / Math.pow(1e3, e)).toFixed(2) + ' ' + ('kMGTPEZY'[e - 1] || '') + 'B';\r\n};","import * as APIHandler from '../Api/ApiHandler.js';\r\n\r\n/**\r\n * Request API to get file list for the selected path then refresh UI\r\n * @returns {Function}\r\n */\r\nexport const uploadFiles = (fileList) => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    dispatch(setLoading(true));\r\n    dispatch(setSelectedFiles([]));\r\n    dispatch(setFileUploadProgress(50));\r\n\r\n    APIHandler.uploadFiles(path.join('/'), fileList).then(r => {\r\n        dispatch(setFileUploadProgress(100));\r\n        setTimeout(f => {\r\n            dispatch(resetFileUploader());\r\n        }, 3000);\r\n        dispatch(refreshFileList());\r\n    }).catch(r => {\r\n        dispatch({\r\n            type: 'SET_ERROR_MSG',\r\n            value: r.toString()\r\n        });\r\n        dispatch(setLoading(false));\r\n    });\r\n};\r\n\r\n/**\r\n * Request API to get file list for the selected path then refresh UI\r\n * @returns {Function}\r\n */\r\nexport const refreshFileList = () => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    dispatch(setLoading(true));\r\n    dispatch(setSelectedFiles([]));\r\n\r\n    APIHandler.getFileList(path.join('/')).then(r => {\r\n        dispatch(setLoading(false));\r\n        dispatch(setFileList(r));\r\n    }).catch(r => {\r\n        dispatch(setFileList([]));\r\n        dispatch({\r\n            type: 'SET_ERROR_MSG',\r\n            value: r.toString()\r\n        });\r\n        dispatch(setLoading(false));\r\n    });\r\n};\r\n\r\n\r\n/**\r\n * Request API to get file list for the selected path then refresh UI\r\n * @returns {Function}\r\n */\r\nexport const refreshFileListSublist = () => (dispatch, getState) => {\r\n    const { pathSublist } = getState();\r\n    dispatch(setLoadingSublist(true));\r\n    dispatch(setSelectedFolderSublist(null));\r\n\r\n    APIHandler.getFileList(pathSublist.join('/')).then(r => {\r\n        dispatch(setLoadingSublist(false));\r\n        dispatch(setFileListSublist(r));\r\n    }).catch(r => {\r\n        dispatch(setFileListSublist([]));\r\n        dispatch({\r\n            type: 'SET_ERROR_MSG',\r\n            value: r.toString()\r\n        });\r\n        dispatch(setLoadingSublist(false));\r\n    });\r\n};\r\n\r\n\r\n/**\r\n * Request API to get file content then dispatch defined events\r\n * @param {String} fileName\r\n * @returns {Function}\r\n */\r\nexport const getFileContent = (fileName) => (dispatch, getState) => {\r\n    const { path } = getState();\r\n\r\n    dispatch(setLoading(true));\r\n    dispatch(setFileContent(null));\r\n    dispatch(setVisibleDialogContent(true));\r\n    APIHandler.getFileBody(path.join('/'), fileName).then(blob => {\r\n        dispatch(setFileContent(blob));\r\n        dispatch(setLoading(false));\r\n    }).catch(r => {\r\n        dispatch({\r\n            type: 'SET_ERROR_MSG',\r\n            value: r.toString()\r\n        });\r\n        dispatch(setLoading(false));\r\n    });\r\n};\r\n\r\n/**\r\n * Request API to rename file then dispatch defined events\r\n * @param {String} fileName\r\n * @returns {Function}\r\n */\r\nexport const renameItem = (fileName, newFileName) => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    dispatch(setLoading(true));\r\n    APIHandler.renameItem(path.join('/'), fileName, newFileName).then(blob => {\r\n        dispatch(setVisibleDialogRename(false));\r\n        dispatch(setLoading(false));\r\n        dispatch(refreshFileList());\r\n    }).catch(r => {\r\n        dispatch({\r\n            type: 'SET_ERROR_MSG',\r\n            value: r.toString()\r\n        });\r\n        dispatch(setLoading(false));\r\n    });\r\n};\r\n\r\n/**\r\n * Request API to get download file then dispatch defined events\r\n * @param {String} fileName\r\n * @returns {Function}\r\n */\r\nexport const downloadFile = (fileName) => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    dispatch(setLoading(true));\r\n    APIHandler.getFileBody(path.join('/'), fileName).then(blob => {\r\n        // TODO workaround large files disables ui for long time\r\n        const blobUrl = window.URL.createObjectURL(blob);\r\n        let tempLink = window.document.createElement('a');\r\n        tempLink.href = blobUrl;\r\n        tempLink.setAttribute('download', fileName);\r\n        tempLink.click();\r\n        window.URL.revokeObjectURL(blobUrl);\r\n        dispatch(setLoading(false));\r\n    }).catch(r => {\r\n        dispatch({\r\n            type: 'SET_ERROR_MSG',\r\n            value: r.toString()\r\n        });\r\n        dispatch(setLoading(false));\r\n    });\r\n};\r\n\r\n/**\r\n * Request API to get file content then dispatch defined events\r\n * @param {String} fileName\r\n * @returns {Function}\r\n */\r\nexport const getFileContentForEdit = (fileName) => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    dispatch(setLoading(true));\r\n    dispatch(setFileContent(null));\r\n    dispatch(setVisibleDialogEdit(true));\r\n    APIHandler.getFileBody(path.join('/'), fileName).then(blob => {\r\n        dispatch(setFileContent(blob));\r\n        dispatch(setLoading(false));\r\n    }).catch(r => {\r\n        dispatch({\r\n            type: 'SET_ERROR_MSG',\r\n            value: r.toString()\r\n        });\r\n        dispatch(setLoading(false));\r\n    });\r\n};\r\n\r\n\r\n/**\r\n * Request API to create a folder then dispatch defined events\r\n * @param {String} createFolderName\r\n * @returns {Function}\r\n */\r\nexport const createNewFolder = (createFolderName) => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    dispatch(setLoading(true));\r\n\r\n    APIHandler.createFolder(path.join('/'), createFolderName).then(r => {\r\n        dispatch(setVisibleDialogCreateFolder(false));\r\n        dispatch(setLoading(false));\r\n        dispatch(refreshFileList());\r\n    }).catch(r => {\r\n        dispatch({\r\n            type: 'SET_ERROR_MSG',\r\n            value: r.toString()\r\n        });\r\n        dispatch(setLoading(false));\r\n    });\r\n};\r\n\r\n\r\n/**\r\n * Request API to remove an item then dispatch defined events\r\n * @param {Array} filenames\r\n * @returns {Function}\r\n */\r\nexport const removeItems = (files) => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    const filenames = files.map(f => f.name);\r\n\r\n    dispatch(setLoading(true));\r\n    APIHandler.removeItems(path.join('/'), filenames).then(r => {\r\n        dispatch(setLoading(false));\r\n        dispatch(refreshFileList());\r\n    }).catch(r => {\r\n        dispatch({\r\n            type: 'SET_ERROR_MSG',\r\n            value: r.toString()\r\n        });\r\n        dispatch(setLoading(false));\r\n    });\r\n};\r\n\r\n\r\n/**\r\n * Request API to move an item then dispatch defined events\r\n * @param {Array} filenames\r\n * @returns {Function}\r\n */\r\nexport const moveItems = (files) => (dispatch, getState) => {\r\n    const { path, pathSublist, selectedFolderSublist } = getState();\r\n    const destination = pathSublist.join('/') + '/' + selectedFolderSublist.name;\r\n    const filenames = files.map(f => f.name);\r\n\r\n    dispatch(setLoading(true));\r\n    APIHandler.moveItems(path.join('/'), destination, filenames).then(r => {\r\n        dispatch(setLoading(false));\r\n        dispatch(setVisibleDialogMove(false));\r\n        dispatch(refreshFileList());\r\n    }).catch(r => {\r\n        dispatch({\r\n            type: 'SET_ERROR_MSG',\r\n            value: r.toString()\r\n        });\r\n        dispatch(setLoading(false));\r\n    });\r\n};\r\n\r\n\r\n/**\r\n * Request API to copy an item then dispatch defined events\r\n * @param {Array} filenames\r\n * @returns {Function}\r\n */\r\nexport const copyItems = (files) => (dispatch, getState) => {\r\n    const { path, pathSublist, selectedFolderSublist } = getState();\r\n    const destination = pathSublist.join('/') + '/' + selectedFolderSublist.name;\r\n    const filenames = files.map(f => f.name);\r\n\r\n    dispatch(setLoading(true));\r\n    APIHandler.copyItems(path.join('/'), destination, filenames).then(r => {\r\n        dispatch(setLoading(false));\r\n        dispatch(setVisibleDialogCopy(false));\r\n        dispatch(refreshFileList());\r\n    }).catch(r => {\r\n        dispatch({\r\n            type: 'SET_ERROR_MSG',\r\n            value: r.toString()\r\n        });\r\n        dispatch(setLoading(false));\r\n    });\r\n};\r\n\r\n/**\r\n * This handles multiple selection by using shift key\r\n * @param {Object} lastFile\r\n * @returns {Function}\r\n */\r\nexport const setSelectedFileFromLastTo = (lastFile) => (dispatch, getState) => {\r\n    const { fileList, selectedFiles } = getState();\r\n\r\n    const lastPreviouslySelected = [...selectedFiles].pop();\r\n    const lastPreviouslySelectedIndex = fileList.indexOf(fileList.find(f => f.name === lastPreviouslySelected.name))\r\n    const lastSelectedIndex = fileList.indexOf(fileList.find(f => f.name === lastFile.name))\r\n\r\n    let toAdd = [];\r\n    if (lastSelectedIndex > lastPreviouslySelectedIndex) {\r\n        toAdd = fileList.filter((index, element) => {\r\n            return fileList.indexOf(index) <= lastSelectedIndex && fileList.indexOf(index) >= lastPreviouslySelectedIndex\r\n        });\r\n    } else {\r\n        toAdd = fileList.filter((index, element) => {\r\n            return fileList.indexOf(index) >= lastSelectedIndex && fileList.indexOf(index) <= lastPreviouslySelectedIndex\r\n        });\r\n    }\r\n    dispatch(setSelectedFiles([...selectedFiles, ...toAdd]));\r\n};\r\n\r\n\r\n/**\r\n * @returns {Function}\r\n */\r\nexport const initSubList = () => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    dispatch(setSelectedFolderSublist(null));\r\n    dispatch(setFileListSublist([]));    \r\n    dispatch(setPathSublist([...path]));\r\n    dispatch(refreshFileListSublist());\r\n};\r\n\r\nexport const resetFileUploader = () => (dispatch, getState) => {\r\n    dispatch(setFileUploadProgress(0));\r\n    dispatch(setVisibleDialogUploadFile(false));\r\n    dispatch(setFileUploadList([]));\r\n};\r\n\r\nexport const enterToPreviousDirectory = () => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    dispatch(setPath(path.slice(0, -1)));\r\n    dispatch(setFileListFilter(null));\r\n    dispatch(refreshFileList());\r\n};\r\n\r\nexport const enterToPreviousDirectoryByIndex = (index) => (dispatch, getState) => {\r\n    const { path } = getState();\r\n    const newPath = [...path].slice(0, ++index);\r\n    dispatch(setPath(newPath));\r\n    dispatch(refreshFileList());\r\n    dispatch(setFileListFilter(null));\r\n};\r\n\r\nexport const enterToPreviousDirectorySublist = () => (dispatch, getState) => {\r\n    const { pathSublist } = getState();\r\n    dispatch(setPathSublist(pathSublist.slice(0, -1)));\r\n    dispatch(refreshFileListSublist());\r\n};\r\n\r\nexport const setPath = (path) => {\r\n    return {\r\n        type: 'SET_PATH',\r\n        value: path\r\n    };\r\n};\r\n\r\nexport const setPathSublist = (path) => {\r\n    return {\r\n        type: 'SET_PATH_SUB_LIST',\r\n        value: path\r\n    };\r\n};\r\n\r\nexport const enterToDirectory = (directory) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: 'ENTER_TO_DIRECTORY',\r\n        value: directory\r\n    });\r\n    dispatch(setFileListFilter(null));\r\n    dispatch(refreshFileList());\r\n};\r\n\r\nexport const enterToDirectorySublist = (directory) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: 'ENTER_TO_DIRECTORY_SUB_LIST',\r\n        value: directory\r\n    });\r\n    dispatch(refreshFileListSublist());\r\n};\r\n\r\nexport const setFileList = (fileList) => {\r\n    return {\r\n        type: 'SET_FILE_LIST',\r\n        value: fileList\r\n    };\r\n};\r\n\r\nexport const setFileListSublist = (fileList) => {\r\n    return {\r\n        type: 'SET_FILE_LIST_SUB_LIST',\r\n        value: fileList\r\n    };\r\n};\r\n\r\nexport const setSelectedFiles = (files) => {\r\n    return {\r\n        type: 'SET_SELECTED_FILES',\r\n        value: files\r\n    };\r\n};\r\n\r\nexport const setSelectedFolderSublist = (file) => {\r\n    return {\r\n        type: 'SET_SELECTED_FOLDER_SUB_LIST',\r\n        value: file\r\n    };\r\n};\r\n\r\nexport const setFileListFilter = (search) => {\r\n    return {\r\n        type: 'SET_FILE_LIST_FILTER',\r\n        value: search\r\n    };\r\n};\r\n\r\nexport const setContextMenuVisible = (visible) => {\r\n    return {\r\n        type: 'SET_CONTEXT_MENU_VISIBLE',\r\n        value: !!visible\r\n    };\r\n};\r\n\r\nexport const setContextMenuPosition = (x, y) => {\r\n    return {\r\n        type: 'SET_CONTEXT_MENU_POSITION',\r\n        value: [x, y]\r\n    };\r\n};\r\n\r\nexport const setContextMenuPositionElement = (element) => {\r\n    return {\r\n        type: 'SET_CONTEXT_MENU_POSITION_ELEMENT',\r\n        value: element\r\n    };\r\n};\r\n\r\nexport const toggleSelectedFile = (file) => {\r\n    return {\r\n        type: 'TOGGLE_SELECTED_FILE',\r\n        value: file\r\n    };\r\n};\r\n\r\nexport const rightClickOnFile = (file) => (dispatch, getState) => {\r\n    const { selectedFiles } = getState();\r\n    const isSelected = selectedFiles.indexOf(selectedFiles.find(f => f.name === file.name)) !== -1;\r\n\r\n    !isSelected && dispatch(setSelectedFiles([file]));\r\n};\r\n\r\nexport const setLoading = (value) => {\r\n    return {\r\n        type: 'SET_LOADING',\r\n        value: value\r\n    };\r\n};\r\n\r\nexport const setLoadingSublist = (value) => {\r\n    return {\r\n        type: 'SET_LOADING_SUB_LIST',\r\n        value: value\r\n    };\r\n};\r\n\r\nexport const setVisibleDialogCreateFolder = (visible) => {\r\n    return {\r\n        type: 'SET_VISIBLE_DIALOG_CREATE_FOLDER',\r\n        value: !!visible\r\n    };\r\n};\r\n\r\nexport const setVisibleDialogUploadFile = (visible) => {\r\n    return {\r\n        type: 'SET_VISIBLE_DIALOG_UPLOAD_FILE',\r\n        value: !!visible\r\n    };\r\n};\r\n\r\nexport const setVisibleDialogRename = (visible) => {\r\n    return {\r\n        type: 'SET_VISIBLE_DIALOG_RENAME',\r\n        value: !!visible\r\n    };\r\n};\r\n\r\nexport const setVisibleDialogMove = (visible) => {\r\n    return {\r\n        type: 'SET_VISIBLE_DIALOG_MOVE',\r\n        value: !!visible\r\n    };\r\n};\r\n\r\nexport const setVisibleDialogCopy = (visible) => {\r\n    return {\r\n        type: 'SET_VISIBLE_DIALOG_COPY',\r\n        value: !!visible\r\n    };\r\n};\r\n\r\nexport const setVisibleDialogContent = (visible) => {\r\n    return {\r\n        type: 'SET_VISIBLE_DIALOG_CONTENT',\r\n        value: !!visible\r\n    };\r\n};\r\n\r\nexport const setVisibleDialogEdit = (visible) => {\r\n    return {\r\n        type: 'SET_VISIBLE_DIALOG_EDIT',\r\n        value: !!visible\r\n    };\r\n};\r\n\r\nexport const setFileContent = (blob) => {\r\n   return {\r\n        type: 'SET_FILE_CONTENT',\r\n        value: blob\r\n    };\r\n};\r\n\r\nexport const setFileUploadProgress = (percentage) => {\r\n   return {\r\n        type: 'SET_FILE_UPLOAD_PROGRESS',\r\n        value: percentage\r\n    };\r\n};\r\n\r\nexport const setFileUploadList = (files) => {\r\n   return {\r\n        type: 'SET_FILE_UPLOAD_LIST',\r\n        value: files\r\n    };\r\n};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    enterToDirectory, setContextMenuVisible, toggleSelectedFile, setContextMenuPosition,\r\n    setSelectedFileFromLastTo, getFileContent, getFileContentForEdit, \r\n    rightClickOnFile, setSelectedFiles\r\n} from '../../Actions/Actions.js';\r\nimport './File.css';\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport config from '../../config.js';\r\nimport { getHumanFileSize } from '../../Api/ApiHandler';\r\n\r\nclass File extends Component {\r\n    render() {\r\n        const { isSelected, type, name, size, handleClick, handleDoubleClick, handleContextMenu } = this.props;\r\n        const avatarStyle = {\r\n            backgroundColor: isSelected ? blue['A200'] : null\r\n        };\r\n        const realSize = typeof size !== 'undefined' && type !== 'dir' ? getHumanFileSize(size) : null;\r\n        return (\r\n            <div className=\"File\" onClick={handleClick} onDoubleClick={handleDoubleClick} onContextMenu={handleContextMenu} data-selected={isSelected}>\r\n                <ListItem>\r\n                    <ListItemAvatar>\r\n                        <Avatar style={avatarStyle}>\r\n                            { type === 'dir' ? <FolderIcon /> : <FileIcon />}\r\n                        </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText className=\"filename\" primary={name} secondary={realSize} />\r\n                </ListItem>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        filePath: [...state.path, ownProps.name],\r\n        isSelected: !!state.selectedFiles.find(f => f.name === ownProps.name)\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        /**\r\n         * @param {Object} event\r\n         * @returns {undefined}\r\n         */\r\n        handleDoubleClick: (event) => {\r\n            if (ownProps.type === 'file') {\r\n                if (config.isEditableFilePattern.test(ownProps.name) || ownProps.editable) {\r\n                    dispatch(getFileContentForEdit(ownProps.name));\r\n                } else if (config.isImageFilePattern.test(ownProps.name)) {\r\n                    dispatch(getFileContent(ownProps.name));\r\n                }\r\n                return;\r\n            }\r\n\r\n            dispatch(enterToDirectory(ownProps.name));\r\n        },\r\n\r\n        /**\r\n         * @param {Object} event\r\n         * @returns {undefined}\r\n         */\r\n        handleContextMenu: (event) => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n\r\n            const x = event.clientX || (event.touches && event.touches[0].pageX);\r\n            const y = event.clientY || (event.touches && event.touches[0].pageY);\r\n\r\n            if (event.shiftKey) {\r\n                dispatch(setSelectedFileFromLastTo(ownProps));\r\n            } else {\r\n                dispatch(rightClickOnFile(ownProps));\r\n            }\r\n            \r\n            dispatch(setContextMenuVisible(true));\r\n            dispatch(setContextMenuPosition(x, y));\r\n        },\r\n\r\n        /**\r\n         * @param {Object} event\r\n         * @returns {undefined}\r\n         */\r\n        handleClick: (event) => {\r\n            event.stopPropagation();\r\n\r\n            if (event.ctrlKey) {\r\n                dispatch(toggleSelectedFile(ownProps));\r\n            } else if (event.shiftKey) {\r\n                dispatch(setSelectedFileFromLastTo(ownProps));\r\n            } else {\r\n                dispatch(setSelectedFiles([ownProps]));\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nFile.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    size: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number\r\n    ]),\r\n    editable: PropTypes.oneOfType([\r\n        PropTypes.bool, PropTypes.number\r\n    ])\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(File);\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './FileListEmptyMessage.css';\r\n\r\nclass FileListEmptyMessage extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"FileListEmptyMessage\">\r\n                No files in this folder\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    };\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FileListEmptyMessage);\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst styles = theme => ({\r\n  progress: {\r\n    margin: theme.spacing.unit * 10,\r\n  },\r\n});\r\n\r\nfunction Loader(props) {\r\n    const { classes } = props;\r\n    return (\r\n        <Grid container justify=\"center\">\r\n            <CircularProgress className={classes.progress} color=\"secondary\" />\r\n        </Grid>\r\n    );\r\n}\r\n\r\nLoader.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Loader);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport File from '../File/File.jsx'; \r\nimport FileListEmptyMessage from './FileListEmptyMessage';\r\nimport Loader from '../Loader/Loader.jsx'; \r\nimport './FileList.css';\r\n\r\nclass FileList extends Component {\r\n    render() {\r\n        const { fileList, loading } = this.props;\r\n        \r\n        const fileListComponent = fileList.map((file, key) => {\r\n            return <File type={file.type} name={file.name} editable={file.editable} size={file.size} key={key} />\r\n        });\r\n\r\n        return <div className=\"FileList\">\r\n            { loading ? \r\n                <Loader /> : \r\n                fileListComponent.length ? fileListComponent : <FileListEmptyMessage />\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    const filteredList = state.fileList.filter(\r\n        file => state.fileListFilter ? file.name.toLocaleLowerCase().match(state.fileListFilter.toLocaleLowerCase()) : true\r\n    );\r\n    return {\r\n        fileList: filteredList,\r\n        loading: state.loading\r\n    };\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        handleClick: (event) => {\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FileList);\r\n\r\n\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CreateNewFolderIcon from '@material-ui/icons/CreateNewFolder';\r\nimport { setVisibleDialogCreateFolder } from '../../../Actions/Actions.js';\r\n\r\nfunction CreateFolderAction(props) {\r\n    const {handleClick, handleClose} = props;\r\n\r\n    const handleCloseAfter = (callback) => (event) => {\r\n        callback();\r\n        handleClose();\r\n    };\r\n\r\n    return (\r\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\r\n            <ListItemIcon>\r\n                <CreateNewFolderIcon />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Criar Pasta\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClick: (event) => {\r\n            dispatch(setVisibleDialogCreateFolder(true));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateFolderAction);\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport { setVisibleDialogUploadFile } from '../../../Actions/Actions.js';\r\n\r\nfunction UploadFileAction(props) {\r\n    const {handleClick, handleClose} = props;\r\n\r\n    const handleCloseAfter = (callback) => (event) => {\r\n        callback();\r\n        handleClose();\r\n    };\r\n\r\n    return (\r\n        <MenuItem onClick={handleCloseAfter(handleClick)}>\r\n            <ListItemIcon>\r\n                <CloudUploadIcon />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Upload de Arquivos\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClick: (event) => {\r\n            dispatch(setVisibleDialogUploadFile(true));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadFileAction);\r\n","import React from 'react';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { connect } from 'react-redux';\r\nimport CreateFolderAction from '../ContextMenu/ContextMenuActions/CreateFolderAction.jsx';\r\nimport UploadFileAction from '../ContextMenu/ContextMenuActions/UploadFileAction.jsx';\r\n\r\nclass ThreeDotsMenu extends React.Component {\r\n  state = {\r\n    anchorEl: null,\r\n  };\r\n\r\n  handleClick = event => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n\r\n  render() {\r\n    const { anchorEl } = this.state;\r\n    return (\r\n      <div style={{marginLeft:'1em'}}>\r\n        <IconButton color=\"inherit\" \r\n          aria-label=\"More\"\r\n          aria-owns={Boolean(anchorEl) ? 'long-menu' : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={this.handleClick}>\r\n          <MoreVertIcon />\r\n        </IconButton>\r\n\r\n        <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={this.handleClose}>\r\n          <CreateFolderAction handleClose={this.handleClose} />\r\n          <UploadFileAction handleClose={this.handleClose} />\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ThreeDotsMenu);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\nimport Button from '@material-ui/core/Button';\r\nimport './BreadcrumbText.css';\r\n\r\nconst styles = theme => ({\r\n  lastPath: {\r\n    display: 'block',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none'\r\n    }\r\n  },\r\n  paths: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    }\r\n  }\r\n});\r\n\r\nclass BreadcrumbText extends Component {\r\n\r\n    render() {\r\n        const { classes, handleClickPath, path, rootTitle, handleGoBack, canGoBack } = this.props;\r\n\r\n        const separator = <span>&gt;</span>;\r\n        const rootPath = <span onClick={(e) => handleClickPath(e, -1, path)} data-index={0}>\r\n            { rootTitle } { path.length ? separator : '' }\r\n        </span>;\r\n        const lastPath = [...path].pop() || rootTitle;\r\n\r\n        const directories = path.map((dir, index) => {\r\n            return <span key={index} data-index={index} onClick={(e) => handleClickPath(e, index, path)}>\r\n                <span>{dir}</span> { path.length -1 !== index ? separator : '' }&nbsp;\r\n            </span>\r\n        });\r\n\r\n        return (\r\n            <div className=\"BreadcrumbText\">\r\n                <div className={classes.lastPath}>\r\n                    <Button onClick={handleGoBack} color=\"inherit\" type=\"button\" style={{display: canGoBack ? 'inline-flex' : 'none'}}>\r\n                        <KeyboardArrowLeftIcon />\r\n                    </Button>\r\n                    {lastPath}\r\n                </div>\r\n                <div className={classes.paths}>{rootPath} {directories}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(BreadcrumbText));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade } from '@material-ui/core/styles/colorManipulator';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { connect } from 'react-redux';\r\nimport { setFileListFilter, enterToPreviousDirectoryByIndex } from '../../Actions/Actions.js';\r\nimport ThreeDotsMenu from './ThreeDotsMenu.jsx';\r\nimport BreadcrumbText from '../Breadcrumb/BreadcrumbText.jsx';\r\nimport { enterToPreviousDirectory } from '../../Actions/Actions.js';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginBottom: '4.3em'\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n  title: {\r\n    display: 'block', // was none\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing.unit,\r\n      width: 'auto',\r\n      display: 'block'\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing.unit * 9,\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n    width: '100%',\r\n  },\r\n  inputInput: {\r\n    paddingTop: theme.spacing.unit,\r\n    paddingRight: theme.spacing.unit,\r\n    paddingBottom: theme.spacing.unit,\r\n    paddingLeft: theme.spacing.unit * 10,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: 100,\r\n      '&:focus': {\r\n        width: 200,\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nfunction SearchAppBar(props) {\r\n  const { classes, path, handleClickPath, handleGoBack, canGoBack } = props;\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\r\n            <BreadcrumbText \r\n                path={path} \r\n                handleClickPath={handleClickPath} \r\n                handleGoBack={handleGoBack}\r\n                canGoBack={canGoBack}\r\n                rootTitle=\"Gerenciador de Arquivos\"\r\n            />\r\n          </Typography>\r\n          <div className={classes.grow} />\r\n\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Pesquisar...\"\r\n              value={props.value}\r\n              onChange={props.handleChange}\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n            />\r\n          </div>\r\n          <ThreeDotsMenu />\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nSearchAppBar.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        value: state.fileListFilter || '',\r\n        path: state.path,\r\n        canGoBack: state.path.length\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        handleChange: (event) => {\r\n            dispatch(setFileListFilter(event.currentTarget.value));\r\n        },\r\n        handleGoBack: (event) => {\r\n            dispatch(enterToPreviousDirectory());\r\n        },\r\n        /**\r\n         * @param {Object} event\r\n         * @param {Number} index\r\n         * @param {Array} path\r\n         * @returns {undefined}\r\n         */        \r\n        handleClickPath: (event, index) => {\r\n            dispatch(enterToPreviousDirectoryByIndex(index));\r\n            event.preventDefault();\r\n        }\r\n    };\r\n};\r\n\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(SearchAppBar));\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport { getFileContent, enterToDirectory } from '../../../Actions/Actions.js';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\r\n\r\nfunction OpenAction(props) {\r\n    const {handleClick, selectedFiles} = props;\r\n    return (\r\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\r\n            <ListItemIcon>\r\n                <OpenInBrowserIcon />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Abrir\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedFiles: state.selectedFiles\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClick: (event, selectedFiles) => {\r\n            if (selectedFiles[0].type === 'dir') {\r\n                dispatch(enterToDirectory(selectedFiles[0].name));\r\n                return;\r\n            }\r\n            dispatch(getFileContent(selectedFiles[0].name));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenAction);\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport { removeItems } from '../../../Actions/Actions.js';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nfunction RemoveAction(props) {\r\n    const {handleClick, selectedFiles} = props;\r\n    return (\r\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\r\n            <ListItemIcon>\r\n                <DeleteIcon />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Apagar\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedFiles: state.selectedFiles\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClick: (event, selectedFiles) => {\r\n            dispatch(removeItems(selectedFiles));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RemoveAction);\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport HowToVoteIcon from '@material-ui/icons/HowToVote';\r\nimport { initSubList, setVisibleDialogMove } from '../../../Actions/Actions.js';\r\n\r\nfunction MoveAction(props) {\r\n    const {handleClick, selectedFiles} = props;\r\n\r\n    return (\r\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\r\n            <ListItemIcon>\r\n                <HowToVoteIcon />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Mover\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedFiles: state.selectedFiles\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClick: (event, selectedFiles) => {\r\n            dispatch(initSubList());\r\n            dispatch(setVisibleDialogMove(true));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MoveAction);\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport { initSubList, setVisibleDialogCopy } from '../../../Actions/Actions.js';\r\n\r\nfunction CopyAction(props) {\r\n    const {handleClick, selectedFiles} = props;\r\n\r\n    return (\r\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\r\n            <ListItemIcon>\r\n                <FileCopyIcon />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Copiar\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedFiles: state.selectedFiles\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClick: (event, selectedFiles) => {\r\n            dispatch(initSubList());\r\n            dispatch(setVisibleDialogCopy(true));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CopyAction);\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport { getFileContentForEdit } from '../../../Actions/Actions.js';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\r\n\r\nfunction OpenAction(props) {\r\n    const {handleClick, selectedFiles} = props;\r\n    return (\r\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\r\n            <ListItemIcon>\r\n                <OpenInBrowserIcon />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Editar\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedFiles: state.selectedFiles\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClick: (event, selectedFiles) => {\r\n            dispatch(getFileContentForEdit(selectedFiles[0].name));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OpenAction);\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport WrapTextIcon from '@material-ui/icons/WrapText';\r\nimport { setVisibleDialogRename } from '../../../Actions/Actions.js';\r\n\r\nfunction MoveAction(props) {\r\n    const {handleClick, selectedFiles} = props;\r\n\r\n    return (\r\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\r\n            <ListItemIcon>\r\n                <WrapTextIcon />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Renomear\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedFiles: state.selectedFiles\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClick: (event, selectedFiles) => {\r\n            dispatch(setVisibleDialogRename(true));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MoveAction);\r\n","import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { connect } from 'react-redux';\r\nimport { downloadFile } from '../../../Actions/Actions.js';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\n\r\nfunction DownloadAction(props) {\r\n    const {handleClick, selectedFiles} = props;\r\n    return (\r\n        <MenuItem onClick={(e) => handleClick(e, selectedFiles)}>\r\n            <ListItemIcon>\r\n                <CloudDownloadIcon   />\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\">\r\n                Download\r\n            </Typography>\r\n        </MenuItem>        \r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        selectedFiles: state.selectedFiles\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClick: (event, selectedFiles) => {\r\n            dispatch(downloadFile(selectedFiles[0].name));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DownloadAction);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './ContextMenu.css';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport { getActionsByMultipleFiles } from '../../Api/ApiHandler.js';\r\nimport OpenAction from './ContextMenuActions/OpenAction.jsx';\r\nimport RemoveAction from './ContextMenuActions/RemoveAction.jsx';\r\nimport MoveAction from './ContextMenuActions/MoveAction.jsx';\r\nimport CopyAction from './ContextMenuActions/CopyAction.jsx';\r\nimport EditAction from './ContextMenuActions/EditAction.jsx';\r\nimport RenameAction from './ContextMenuActions/RenameAction.jsx';\r\nimport DownloadAction from './ContextMenuActions/DownloadAction.jsx';\r\n\r\nclass ContextMenu extends Component {\r\n\r\n    render() {\r\n        const { acts, visible, x, y } = this.props;\r\n        const actionsComp = acts.map((act, key) => {\r\n            let component;\r\n            if (act === 'open') {\r\n                component = <OpenAction key={key} />;\r\n            }\r\n            if (act === 'edit') {\r\n                component = <EditAction key={key} />;\r\n            }\r\n            if (act === 'copy') {\r\n                component = <CopyAction key={key} />;\r\n            }            \r\n            if (act === 'move') {\r\n                component = <MoveAction key={key} />;\r\n            }\r\n            if (act === 'rename') {\r\n                component = <RenameAction key={key} />;\r\n            }\r\n            if (act === 'download') {\r\n                component = <DownloadAction key={key} />;\r\n            }\r\n            if (act === 'remove') {\r\n                component = <RemoveAction key={key} />;\r\n            }\r\n            return component;\r\n        });\r\n\r\n        return (\r\n            <div> \r\n                <Menu \r\n                    anchorReference=\"anchorPosition\"\r\n                    anchorPosition={{ top: y, left: x }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    open={visible} \r\n                    onClose={ () => {} } \r\n                    PaperProps={{ style: {width: 170} }}>\r\n                    { actionsComp }\r\n                </Menu>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        x: state.contextMenuPosition[0] || 0,\r\n        y: state.contextMenuPosition[1] || 0,\r\n        visible: !!state.contextMenuVisible,\r\n        acts: getActionsByMultipleFiles(state.selectedFiles),\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContextMenu);\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { connect } from 'react-redux';\r\nimport { setVisibleDialogContent } from '../../../Actions/Actions.js';\r\n\r\nclass FormDialog extends Component {\r\n\r\n    state = {\r\n        lastBlobUrl: null,\r\n        content: '...',\r\n        loading: false\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.blobUrl !== this.state.lastBlobUrl) {\r\n            this.setState({\r\n                lastBlobUrl: this.props.blobUrl\r\n            });\r\n            this.setState({\r\n                loading: true\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { handleClose, open } = this.props;\r\n        return (\r\n          <div style={{marginLeft:'1em'}}>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-content\" fullWidth={true} maxWidth={'sm'}>\r\n              <DialogTitle id=\"form-dialog-content\">Visualizando Arquivo </DialogTitle>\r\n              <DialogContent>\r\n                <img src={this.props.blobUrl} alt=\"\" style={{maxWidth: '100%'}}/>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\" type=\"button\">\r\n                  Fechar\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        open: state.visibleDialogContent,\r\n        blobUrl: state.fileContentBlobUrl\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClose: (event) => {\r\n            dispatch(setVisibleDialogContent(false));\r\n        },\r\n        handleOpen: (event) => {\r\n            dispatch(setVisibleDialogContent(true));\r\n        },\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { connect } from 'react-redux';\r\nimport { setVisibleDialogEdit } from '../../../Actions/Actions.js';\r\n\r\nclass FormDialog extends Component {\r\n\r\n    state = {\r\n        lastBlobUrl: null,\r\n        content: null,\r\n        loading: false\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.blobUrl !== this.state.lastBlobUrl) {\r\n            this.setState({\r\n                lastBlobUrl: this.props.blobUrl\r\n            });\r\n            this.setState({\r\n                loading: true\r\n            });\r\n\r\n            this.props.blobUrl && fetch(this.props.blobUrl).then(r => {\r\n                return r.text();\r\n            }).then(t => {\r\n                this.setState({\r\n                    content: t\r\n                });\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { handleClose, handleSave, open } = this.props;\r\n        const textAreaStyle = {\r\n            width: '100%',\r\n            minHeight: '300px'\r\n        };\r\n        const textArea = <textarea style={textAreaStyle} defaultValue={this.state.content || ''} />;\r\n\r\n        return (\r\n          <div>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-edit\" fullWidth={true} maxWidth={'sm'}>\r\n              <DialogTitle id=\"form-dialog-edit\">Editar Arquivo </DialogTitle>\r\n              <DialogContent>\r\n                  <DialogContentText>\r\n                    { this.state.loading ? 'Loading...' : textArea }\r\n                  </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\" type=\"button\">\r\n                    Cancelar\r\n                </Button>\r\n                <Button color=\"primary\" onClick={handleSave} type=\"submit\">\r\n                    Salvar\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        open: state.visibleDialogEdit,\r\n        blobUrl: state.fileContentBlobUrl\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClose: (event) => {\r\n            dispatch(setVisibleDialogEdit(false));\r\n        },\r\n        handleOpen: (event) => {\r\n            dispatch(setVisibleDialogEdit(true));\r\n        },\r\n        handleSave: (event) => {\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { connect } from 'react-redux';\r\nimport { createNewFolder, setVisibleDialogCreateFolder } from '../../../Actions/Actions.js';\r\n\r\nclass FormDialog extends Component {\r\n\r\n    render() {\r\n        const { handleClose, handleSave, value, open } = this.props;\r\n\r\n        return (\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-create-folder\" fullWidth={true} maxWidth={'sm'}>\r\n                <form>\r\n                  <DialogTitle id=\"form-dialog-create-folder\">Criar pasta</DialogTitle>\r\n                  <DialogContent>\r\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"Folder name\" type=\"text\" value={value} />\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\r\n                      Cancelar\r\n                    </Button>\r\n                    <Button color=\"primary\" type=\"submit\" onClick={handleSave}>\r\n                      Salvar\r\n                    </Button>\r\n                  </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        createFolderName: state.createFolderName,\r\n        open: state.visibleDialogCreateFolder\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClose: event => {\r\n            dispatch(setVisibleDialogCreateFolder(false));\r\n        },\r\n        handleSave: event => {\r\n            event.preventDefault();\r\n            const folderName = event.currentTarget.form.querySelector('input').value;\r\n            dispatch(createNewFolder(folderName));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { connect } from 'react-redux';\r\nimport { renameItem, setVisibleDialogRename } from '../../../Actions/Actions.js';\r\n\r\nclass FormDialog extends Component {\r\n\r\n    state = {\r\n        value: ''\r\n    };\r\n\r\n    componentWillReceiveProps (props) {\r\n        this.setState({value: props.realName});\r\n    }\r\n\r\n    handleChange (event) {\r\n        this.setState({value: event.currentTarget.form.querySelector('input').value});\r\n    }\r\n\r\n    handleSave (event) {\r\n        this.props.handleSave(event)(this.props.realName, this.state.value);\r\n    }\r\n\r\n    render() {\r\n        const { value } = this.state;\r\n        const { handleClose, open } = this.props;\r\n\r\n        return (\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-create-folder\" fullWidth={true} maxWidth={'sm'}>\r\n                <form>\r\n                  <DialogTitle id=\"form-dialog-create-folder\">Rename</DialogTitle>\r\n                  <DialogContent>\r\n                    <TextField autoFocus fullWidth margin=\"dense\" label=\"Item name\" type=\"text\" onChange={this.handleChange.bind(this)} value={value} />\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\" type=\"button\">\r\n                      Cancel\r\n                    </Button>\r\n                    <Button color=\"primary\" type=\"submit\" onClick={this.handleSave.bind(this)}>\r\n                      Save\r\n                    </Button>\r\n                  </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        open: state.visibleDialogRename,\r\n        realName: state.selectedFiles.length ? state.selectedFiles[0].name : ''\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClose: event => {\r\n            dispatch(setVisibleDialogRename(false));\r\n        },\r\n        handleSave: event => (realName, newName) => {\r\n            event.preventDefault();\r\n            dispatch(renameItem(realName, newName));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n    setSelectedFolderSublist, enterToDirectorySublist \r\n} from '../../../Actions/Actions.js';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport '../File.css';\r\n\r\nconst styles = theme => ({\r\n});\r\n\r\n\r\nclass FileSublist extends Component {\r\n    render() {\r\n        const { type, name, handleClick, isSelected, handleDoubleClick } = this.props;\r\n        const avatarStyle = {\r\n            backgroundColor: isSelected ? blue['A200'] : null\r\n        };\r\n        return (\r\n            <div className=\"File\" onClick={handleClick} data-selected={isSelected} onDoubleClick={handleDoubleClick}>\r\n                <ListItem>\r\n                    <ListItemAvatar>\r\n                        <Avatar style={avatarStyle}>\r\n                            { type === 'dir' ? <FolderIcon /> : <FileIcon />}\r\n                        </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary={name} secondary=\"\" />\r\n                </ListItem>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        filePath: [...state.path, ownProps.name],\r\n        isSelected: state.selectedFolderSublist && (state.selectedFolderSublist.name === ownProps.name)\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        /**\r\n         * @param {Object} event\r\n         * @returns {undefined}\r\n         */\r\n        handleDoubleClick: (event) => {\r\n            dispatch(enterToDirectorySublist(ownProps.name));\r\n            dispatch(setSelectedFolderSublist(null));\r\n        },\r\n\r\n        /**\r\n         * @param {Object} event\r\n         * @returns {undefined}\r\n         */\r\n        handleClick: (event) => {\r\n            event.stopPropagation(); \r\n            dispatch(setSelectedFolderSublist(ownProps));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(FileSublist));\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport FileSublist from '../../File//FileSublist/FileSublist.jsx'; \r\nimport Loader from '../../Loader/Loader.jsx'; \r\nimport FileListEmptyMessage from '../FileListEmptyMessage';\r\nimport './FileListSublist.css'; \r\n\r\nclass FileListSublist extends Component {\r\n    render() {\r\n        const { fileList, loadingSublist } = this.props;\r\n        \r\n        const fileListComponent = fileList.map((file, key) => {\r\n            return <FileSublist type={file.type} name={file.name} key={key} />\r\n        });\r\n\r\n        return <div className=\"FileListSublist\">\r\n            { loadingSublist ? \r\n                <Loader /> : \r\n                fileListComponent.length ? fileListComponent : <FileListEmptyMessage />\r\n            }\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const filteredList = state.fileListSublist\r\n        .filter(file => file.type === 'dir')\r\n        .filter(file => state.path.join('').trim() === state.pathSublist.join('').trim() ? \r\n            !state.selectedFiles.find(f => f.name === file.name) : true\r\n        );\r\n    return {\r\n        fileList: filteredList,\r\n        loadingSublist: state.loadingSublist,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FileListSublist);","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { connect } from 'react-redux';\r\nimport { setVisibleDialogMove, setSelectedFolderSublist, enterToPreviousDirectorySublist, moveItems } from '../../../Actions/Actions.js';\r\nimport FileListSublist from '../../FileList/FileListSublist/FileListSublist.jsx'; \r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\n\r\nclass FormDialog extends Component {\r\n\r\n    render() {\r\n        const { \r\n            selectedPath, handleClose, handleSave, open, \r\n            selectedFiles, canGoBack, canMove, handleGoBack \r\n        } = this.props;\r\n\r\n        return (\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-move\" fullWidth={true} maxWidth={'sm'}>\r\n                <form>\r\n                    <DialogTitle id=\"form-dialog-move\">\r\n                        Move files to <small style={{color: 'grey'}}>{ selectedPath.join('/') }</small>\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <FileListSublist />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleGoBack} color=\"primary\" type=\"button\" disabled={!canGoBack}>\r\n                            <KeyboardArrowLeftIcon /> Go back directory\r\n                        </Button>\r\n\r\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button color=\"primary\" onClick={(e) => handleSave(e, selectedFiles)} disabled={!canMove} type=\"submit\">\r\n                            Move\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    // prevent moving to same folder\r\n    const canMove = state.path.join('') !== state.pathSublist.join('') + (state.selectedFolderSublist ? state.selectedFolderSublist.name : '');\r\n\r\n    return {\r\n        open: state.visibleDialogMove,\r\n        selectedFolderSublist: state.selectedFolderSublist,\r\n        selectedPath: state.selectedFolderSublist ? [...state.pathSublist, state.selectedFolderSublist.name] : [],\r\n        selectedFiles: state.selectedFiles,\r\n        pathSublist: state.pathSublist,\r\n        canGoBack: state.pathSublist.length,\r\n        canMove: state.selectedFolderSublist && canMove\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClose: (event) => {\r\n            dispatch(setSelectedFolderSublist(null));\r\n            dispatch(setVisibleDialogMove(false));\r\n        },\r\n        handleSave: (event, selectedFiles) => {\r\n            dispatch(moveItems(selectedFiles));\r\n        },\r\n        handleGoBack: (event) => {\r\n            dispatch(setSelectedFolderSublist(null));\r\n            dispatch(enterToPreviousDirectorySublist());\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { connect } from 'react-redux';\r\nimport { setVisibleDialogCopy, setSelectedFolderSublist, enterToPreviousDirectorySublist, copyItems } from '../../../Actions/Actions.js';\r\nimport FileListSublist from '../../FileList/FileListSublist/FileListSublist.jsx'; \r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\n\r\nclass FormDialog extends Component {\r\n\r\n    render() {\r\n        const { \r\n            selectedPath, handleClose, handleSave, open, \r\n            canGoBack, canCopy, selectedFiles, handleGoBack \r\n        } = this.props;\r\n\r\n        return (\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-copy\" fullWidth={true} maxWidth={'sm'}>\r\n                <form>\r\n                    <DialogTitle id=\"form-dialog-copy\">\r\n                        Copiar arquivos para <small style={{color: 'grey'}}>{ selectedPath.join('/') }</small>\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <FileListSublist />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleGoBack} color=\"primary\" type=\"button\" disabled={!canGoBack}>\r\n                            <KeyboardArrowLeftIcon /> Ir para diretório anterior\r\n                        </Button>\r\n\r\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\r\n                            Cancelar\r\n                        </Button>\r\n                        <Button color=\"primary\" onClick={(e) => handleSave(e, selectedFiles)} disabled={!canCopy} type=\"submit\">\r\n                            Copiar\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    // prevent copying to same folder\r\n    const canCopy = state.path.join('') !== state.pathSublist.join('') + (state.selectedFolderSublist ? state.selectedFolderSublist.name : '');\r\n\r\n    return {\r\n        open: state.visibleDialogCopy,\r\n        selectedFolderSublist: state.selectedFolderSublist,\r\n        selectedPath: state.selectedFolderSublist ? [...state.pathSublist, state.selectedFolderSublist.name] : [],\r\n        canGoBack: state.pathSublist.length,\r\n        canCopy: state.selectedFolderSublist && canCopy,\r\n        selectedFiles: state.selectedFiles\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClose: (event) => {\r\n            dispatch(setSelectedFolderSublist(null));\r\n            dispatch(setVisibleDialogCopy(false));\r\n        },\r\n        handleSave: (event, selectedFiles) => {\r\n            dispatch(copyItems(selectedFiles));\r\n        },\r\n        handleGoBack: (event) => {\r\n            dispatch(setSelectedFolderSublist(null));\r\n            dispatch(enterToPreviousDirectorySublist());\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport FileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport { getHumanFileSize } from '../../Api/ApiHandler';\r\n\r\nfunction UploadFileList(props) {\r\n    const { files } = props;\r\n    const list = files.map((f, i) =>\r\n        <ListItem dense key={i}>\r\n            <ListItemIcon>\r\n                <FileIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary={`${f.name} (${getHumanFileSize(f.size)})`} />\r\n        </ListItem>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <List component=\"nav\">\r\n                {list}\r\n            </List>\r\n        </div>\r\n    );\r\n}\r\n\r\nUploadFileList.propTypes = {\r\n    files: PropTypes.array.isRequired\r\n};\r\n\r\nexport default UploadFileList;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport UploadFileList from './UploadFileList';\r\n\r\nclass FileUploader extends Component {\r\n\r\n    handleReset(event) {\r\n        this.refs.inputfile.value = '';\r\n        this.props.handleReset(event);\r\n    }\r\n\r\n    render() {\r\n        const { fileUploadList, handleSelectedFiles } = this.props;\r\n        const styles = {\r\n            inputfile: {\r\n                display: 'none'\r\n            }, inputreset: {\r\n                display: fileUploadList.length ? 'inline-flex' : 'none'\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <label htmlFor=\"button-file\">\r\n                    <input style={styles.inputfile} id=\"button-file\" ref=\"inputfile\" multiple type=\"file\" onChange={handleSelectedFiles} />\r\n                    <Button component=\"span\" variant=\"contained\" color=\"primary\">\r\n                        Select Files\r\n                    </Button>\r\n                </label>\r\n\r\n                <Button style={styles.inputreset} component=\"span\" type=\"reset\" onClick={this.handleReset.bind(this)}>\r\n                    Clear\r\n                </Button>\r\n\r\n                <UploadFileList files={fileUploadList} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFileUploader.propTypes = {\r\n    fileUploadList: PropTypes.array.isRequired,\r\n    handleReset: PropTypes.func.isRequired,\r\n    handleSelectedFiles: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FileUploader;\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { connect } from 'react-redux';\r\nimport { resetFileUploader, uploadFiles, setFileUploadList } from '../../../Actions/Actions.js';\r\nimport FileUploader from '../../FileUploader/FileUploader.jsx';\r\n\r\nclass FormDialog extends Component {\r\n\r\n    render() {\r\n        const { handleClose, handleReset, handleUpload, open, canUpload, fileUploadProgress, fileUploadList, handleSelectedFiles } = this.props;\r\n\r\n        return (\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-upload\" fullWidth={true} maxWidth={'sm'}>\r\n                <form>\r\n                    <DialogTitle id=\"form-dialog-upload\">\r\n                        Upload files\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <FileUploader handleUpload={handleUpload} fileUploadList={fileUploadList} handleSelectedFiles={handleSelectedFiles} handleReset={handleReset}/>\r\n                        {canUpload ? <LinearProgress variant=\"determinate\" value={fileUploadProgress} /> : null }\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color=\"primary\" type=\"button\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button color=\"primary\" onClick={handleUpload} disabled={!canUpload} type=\"submit\">\r\n                            Upload\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        open: state.visibleDialogUploadFile,\r\n        canUpload: state.fileUploadList.length,\r\n        fileUploadList: state.fileUploadList,\r\n        fileUploadProgress: state.fileUploadProgress\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClose: (event) => {\r\n            dispatch(resetFileUploader());\r\n        },\r\n        handleUpload: (event) => {\r\n            event.preventDefault();\r\n            const files = event.currentTarget.form.querySelector('input[type=file]').files;\r\n            dispatch(uploadFiles(files));\r\n        },\r\n        handleSelectedFiles: (event) => {\r\n            dispatch(setFileUploadList(\r\n                [...event.target.files].map(f => ({name: f.name, size: f.size}))\r\n            ));\r\n        },\r\n        handleReset: (event) => {\r\n            dispatch(setFileUploadList([]));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\r\n","import React from 'react';\r\nimport DialogContent from './Content/Content.jsx';\r\nimport DialogEdit from './Edit/Edit.jsx';\r\nimport DialogCreateFolder from './CreateFolder/CreateFolder.jsx';\r\nimport DialogRename from './Rename/Rename.jsx';\r\nimport DialogMove from './Move/Move.jsx';\r\nimport DialogCopy from './Copy/Copy.jsx';\r\nimport DialogUploadFile from './UploadFile/UploadFile.jsx';\r\n\r\nfunction Dialogs(props) {\r\n    return (\r\n        <div className=\"Dialogs\">\r\n            <DialogContent />\r\n            <DialogEdit />\r\n            <DialogCreateFolder />\r\n            <DialogMove />\r\n            <DialogCopy />\r\n            <DialogRename />\r\n            <DialogUploadFile />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { connect } from 'react-redux';\r\n\r\nconst styles = theme => ({\r\n  close: {\r\n    padding: theme.spacing.unit / 2,\r\n  },\r\n});\r\n\r\nclass DynamicSnackbar extends React.Component {\r\n  render() {\r\n    const { classes, errorMsg, handleClose, open, notificationDuration } = this.props;\r\n    return (\r\n      <div>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          open={open}\r\n          autoHideDuration={notificationDuration}\r\n          onClose={handleClose}\r\n          ContentProps={{\r\n            'aria-describedby': 'message-id',\r\n          }}\r\n          message={<span id=\"message-id\">{errorMsg}</span>}\r\n          action={[\r\n            <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" className={classes.close} onClick={handleClose} >\r\n              <CloseIcon />\r\n            </IconButton>,\r\n          ]}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDynamicSnackbar.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        open: !!state.errorMsg,\r\n        errorMsg: state.errorMsg,\r\n        notificationDuration: state.notificationDuration || 60000\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        handleClose: (event) => {\r\n            dispatch({\r\n                type: 'SET_ERROR_MSG',\r\n                value: null\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DynamicSnackbar));\r\n\r\n","import React, { Component } from 'react';\r\nimport FileList from './Components/FileList/FileList.jsx';\r\nimport Navbar from './Components/Navbar/Navbar.jsx';\r\nimport ContextMenu from './Components/ContextMenu/ContextMenu.jsx';\r\nimport Dialogs from './Components/Dialogs/Dialogs.jsx';\r\n\r\nimport { MuiThemeProvider as MaterialUI, createMuiTheme } from '@material-ui/core/styles';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport { connect } from 'react-redux';\r\nimport { setContextMenuVisible, refreshFileList } from './Actions/Actions.js';\r\nimport DynamicSnackbar from './Components/Notification/DynamicSnackbar.jsx'; \r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: blue,\r\n    },\r\n    typography: {\r\n        useNextVariants: true,\r\n    }\r\n});\r\n\r\nclass App extends Component {\r\n    \r\n\r\n    componentDidMount() {\r\n        this.props.init();\r\n    };\r\n\r\n    render() {\r\n        let token = localStorage.getItem(\"token\")\r\n\r\n        if(!token){\r\n            window.location.href = '/dashboard'\r\n        }\r\n\r\n        return (\r\n            <MaterialUI theme={theme}>\r\n                <div onClick={this.props.handleHideContextMenu} onContextMenu={this.props.handleHideContextMenu}>\r\n                    <Navbar />\r\n                    <FileList />\r\n                    <ContextMenu />\r\n                    <DynamicSnackbar />\r\n                    <Dialogs />\r\n                </div>\r\n            </MaterialUI>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        init: () => {\r\n            dispatch(refreshFileList());\r\n        },\r\n\r\n        handleHideContextMenu: (event) => {\r\n            if (! (event.target.tagName === 'INPUT' || /label/i.test(event.target.className))) {\r\n                event.preventDefault();\r\n            }\r\n            dispatch(setContextMenuVisible(false));\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport thunk from 'redux-thunk';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport MainReducer from './Reducers/MainReducer'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nconst store = createStore(MainReducer, applyMiddleware(thunk));\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>, \r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}